version: '3'

services:
  api_schwantes: 
    build:
      context: .
    image: thiagomf712/api_schwantes
    container_name: api_schwantes
    entrypoint: dockerize -wait tcp://pg_schwantes:5432 -timeout 20s docker-entrypoint.sh
    command: node dist/main.js
    networks: 
      - schwantes
    tty: true
    ports: 
      - "3333:3333"
    depends_on: 
      - pg_schwantes
    environment:
      - "POSTGRESS_HOST=pg_schwantes" 
      - "ELASTIC_HOST=http://es_schwantes:9200"

  pg_schwantes:
    image: "postgres:13.3-alpine"
    container_name: pg_schwantes
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    environment:
      - "POSTGRES_DB=${POSTGRESS_DATABASE}"
      - "POSTGRES_USER=${POSTGRESS_USER}"
      - "POSTGRES_PASSWORD=${POSTGRESS_PASSWORD}"
    networks: 
      - schwantes

  es_schwantes:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: es_schwantes
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data_prod:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - schwantes

  kibana_schwantes:
    image: docker.elastic.co/kibana/kibana:7.16.2
    container_name: kibana_schwantes
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - SERVER_NAME=127.0.0.1
      - ELASTICSEARCH_HOSTS=http://es_schwantes:9200
    depends_on:
      - es_schwantes
    ports:
      - 5601:5601
    networks:
      - schwantes

volumes:
  elastic_data_prod:
  postgres_data_prod:

networks:
  schwantes:
    driver: bridge
